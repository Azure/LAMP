{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "lampCommon": {
            "metadata": {
                "description": "Common LAMP values"
            },
            "type": "object"
        },
        "lbPubIp": {
            "metadata": {
                "description": "Public IP address of the deployed load balancer"
            },
            "type": "string"
        },
        "lbOut001PubIp": {
            "metadata": {
                "description": "Outgoing Public IP address of the deployed load balancer"
            },
            "type": "string"
        },
        "lbOut002PubIp": {
            "metadata": {
                "description": "Outgoing Public IP address of the deployed load balancer"
            },
            "type": "string"
        },
        "ctlrPubIp": {
            "metadata": {
                "description": "Public IP address of the deployed controller VM"
            },
            "type": "string"
        },
        // "publicNetworkAccess": {
        //     "type": "string",
        //     "metadata": {
        //         "description": "Value should be either Enabled or Disabled"
        //     },
        //     "defaultValue": "Enabled"

        // },
        "vnetData": {
            "defaultValue": {},
            "type": "Object"
        },
        "serverParameters": {
            "type": "Object",
            "defaultValue": {
                "parameters": [
                    {
                        "name": "require_secure_transport",
                        "value": "OFF",
                        "source": "user-override"
                    }
                ]
            }
        }
    },
    // "variables": {
    // //"api": "2021-05-01",
    // //"firewallRules": "[parameters('firewallRules').rules]",
    // //"publicNetworkAccess": "[if(empty(parameters('vnetData')), 'Enabled', 'Disabled')]"
    // //"vnetDataSet": "[if(empty(parameters('vnetData')), json('{ \"subnetArmResourceId\": \"\" }'), parameters('vnetData'))]",
    // //"finalVnetData": "[json(concat('{ \"subnetArmResourceId\": \"', variables('vnetDataSet').subnetArmResourceId, '\"}'))]"
    // },
    "resources": [
        {
            "apiVersion": "2021-05-01",
            "type": "Microsoft.DBforMySQL/flexibleServers",
            "location": "[parameters('lampCommon').location]",
            "name": "[parameters('lampCommon').serverName]",
            "properties": {
                "version": "[parameters('lampCommon').mysqlVersion]",
                "administratorLogin": "[parameters('lampCommon').dbLogin]",
                "administratorLoginPassword": "[parameters('lampCommon').dbLoginPassword]",
                "sslEnforcement": "[parameters('lampCommon').sslEnforcement]",
                // "publicNetworkAccess": "Enabled",
                "publicNetworkAccess": "[parameters('lampCommon').publicNetworkAccess]",
                // "Network": "[if(empty(parameters('vnetData').Network), json('null'), parameters('vnetData').Network)]",
              "Storage": {
                "storageSizeGB": "[parameters('lampCommon').mysqlPgresStgSizeGB]",
                "iops": "[parameters('lampCommon').mysqlPgresStorageIops]"
                // "Autogrow": "[parameters('storageAutogrow')]"
              },
                "Backup": {
                    "backupRetentionDays": "[parameters('lampCommon').mysqlPgresBackupRetentionDays]",
                    "geoRedundantBackup": "Enabled"
                },
                //"availabilityZone": "[parameters('availabilityZone')]",
                "highAvailability": {
                    "mode": "[parameters('lampCommon').mysqlPgresHighAvailabilityMode]"
                //     "standbyAvailabilityZone": "[parameters('standbyAvailabilityZone')]"
                }
                // "dataencryption": {
                //     "infrastructureEncryption": "[parameters('infrastructureEncryption')]"
                // }
            },
            "sku": {
                "name": "[parameters('lampCommon').mysqlPgresComputeSize]",
                "tier": "[parameters('lampCommon').mysqlPgresSkuTier]"
                //"capacity": "2"
            },
            "resources": [
                {
                    "type": "Microsoft.DBforMySQL/flexibleServers/configurations",
                    "apiVersion": "2021-05-01",
                    "name": "[variables('flexConfigName')]",
                    "dependsOn": [
                        "[concat('Microsoft.DBforMySQL/flexibleServers/', parameters('lampCommon').serverName)]"
                    ],
                    "properties": {
                        "value": "[parameters('serverParameters').parameters[0].value]",
                        "source": "[parameters('serverParameters').parameters[0].source]"
                    }
                },

                {
                    "apiVersion": "2021-05-01",
                    "dependsOn": [
                        "[concat('Microsoft.DBforMySQL/flexibleServers/', parameters('lampCommon').serverName)]",
                        "[concat('Microsoft.DBforMySQL/flexibleServers/configurations/', variables('flexConfigName'))]"
                    ],
                    "location": "[parameters('lampCommon').location]",
                    "name": "[variables('firewallResourceNames').allowLoadBalancer]",
                    "properties": {
                        "startIpAddress": "[parameters('lbPubIp')]",
                        "endIpAddress": "[parameters('lbPubIp')]"
                    },
                    "type": "firewallRules"
                },
                {
                    "apiVersion": "2021-05-01",
                    "dependsOn": [
                        "[concat('Microsoft.DBforMySQL/flexibleServers/', parameters('lampCommon').serverName)]",
                        "[concat('firewallRules/', variables('firewallResourceNames').allowLoadBalancer)]"
                    ],
                    "location": "[parameters('lampCommon').location]",
                    "name": "[variables('firewallResourceNames').allowLoadBalancerOut001]",
                    "properties": {
                        "startIpAddress": "[parameters('lbOut001PubIp')]",
                        "endIpAddress": "[parameters('lbOut001PubIp')]"
                    },
                    "type": "firewallRules"
                },
                {
                    "apiVersion": "2021-05-01",
                    "dependsOn": [
                        "[concat('Microsoft.DBforMySQL/flexibleServers/', parameters('lampCommon').serverName)]",
                        "[concat('firewallRules/', variables('firewallResourceNames').allowLoadBalancerOut001)]"
                    ],
                    "location": "[parameters('lampCommon').location]",
                    "name": "[variables('firewallResourceNames').allowLoadBalancerOut002]",
                    "properties": {
                        "startIpAddress": "[parameters('lbOut002PubIp')]",
                        "endIpAddress": "[parameters('lbOut002PubIp')]"
                    },
                    "type": "firewallRules"
                },
                {
                    "apiVersion": "2021-05-01",
                    "dependsOn": [
                        "[concat('Microsoft.DBforMySQL/flexibleServers/', parameters('lampCommon').serverName)]",
                        "[concat('firewallRules/', variables('firewallResourceNames').allowLoadBalancerOut002)]"
                    ],
                    "location": "[parameters('lampCommon').location]",
                    "name": "[variables('firewallResourceNames').allowControllerVM]",
                    "properties": {
                        "startIpAddress": "[parameters('ctlrPubIp')]",
                        "endIpAddress": "[parameters('ctlrPubIp')]"
                    },
                    "type": "firewallRules"
                }
            ]
        }
    ],
    "outputs": {
        "dbFQDN": {
            "type": "string",
            "value": "[concat(parameters('lampCommon').serverName, parameters('lampCommon').flexDbDomainName)]"
        }
    },
    "variables": {
        "flexConfigName": "[concat(parameters('lampCommon').serverName, '/', parameters('serverParameters').parameters[0].name)]",
        "firewallResourceNames": {
            "allowControllerVM": "mysql-firewall-allow-ctlr",
            "allowLoadBalancer": "mysql-firewall-allow-lb",
            "allowLoadBalancerOut001": "mysql-firewall-allow-lb-out001",
            "allowLoadBalancerOut002": "mysql-firewall-allow-lb-out002",

        },
        "documentation1": "This sub-template creates a mysql server.  It expects certain values in the 'common' datastructure.",
        "documentation10": " serverName                 - Mysql server name",
        "documentation11": " mysqlVersion               - Mysql version",
        "documentation2": " administratorLogin          - mysql admin username",
        "documentation3": " administratorLoginPassword  - mysql admin password",
        "documentation4": " location                    - Mysql server location",
        "documentation5": " mysqlPgresVcores            - Mysql database trasaction units",
        "documentation7": " mysqlPgresSkuName           - Mysql sku name",
        "documentation8": " mysqlPgresStgSizeGB         - Mysql sku size in mb",
        "documentation9": " mysqlPgresSkuTier           - Mysql sku tier",
        "documentationA": " mysqlPgresSkuHwFamily       - Mysql sku hardware family"
    }
}
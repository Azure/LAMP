{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "lampCommon": {
            "metadata": {
                "description": "Common LAMP values"
            },
            "type": "object"
        },
        "dbFQDN": {
            "metadata": {
                "description": "FQDN of the deployed SQL DB"
            },
            "type": "string"
        },
        "storageAccountKey": {
            "metadata": {
                "description": "Storage account key from the storage account deployment."
            },
            "type": "string"
        },
        "redisKey": {
            "metadata": {
                "description": "Redis cache key from the redis deployment ('None' if redis is not selected). This just gets passed through to the controllersetup.json."
            },
            "type": "string"
        }
    },
    "resources": [],
    "variables": {
        "documentation01": "This sub-template doesn't create any Azure resource, but just constructs/returns a JSON object that'll be injected to controller & VMSS VMs (through cloud-init) so that VM setup custom script can read/use, instead of receiving these as a long list of cmdline args",
        "vmSetupParamsObj": {
            "siteProfile": {
                "siteURL": "[parameters('lampCommon').siteURL]",
                "httpsTermination": "[parameters('lampCommon').httpsTermination]",
                "thumbprintSslCert": "[parameters('lampCommon').thumbprintSslCert]",
                "thumbprintCaCert": "[parameters('lampCommon').thumbprintCaCert]"
            },
            "lampProfile": {
                "storageAccountName": "[parameters('lampCommon').storageAccountName]",
                "storageAccountKey": "[parameters('storageAccountKey')]",
                "redisDns": "[parameters('lampCommon').redisDns]",
                "redisKey": "[parameters('redisKey')]",
                "syslogServer": "[parameters('lampCommon').ctlrVmName]",
                "htmlLocalCopySwitch": "[parameters('lampCommon').htmlLocalCopySwitch]"
            },
            "dbServerProfile": {
                "type": "[parameters('lampCommon').dbServerType]",
                "fqdn": "[parameters('dbFQDN')]",
                "adminLogin": "[parameters('lampCommon').dbLogin]",
                "adminLoginAzure": "[concat(parameters('lampCommon').dbLogin, '@', parameters('lampCommon').dbServerType, '-', parameters('lampCommon').resourcesPrefix)]",
                "adminPassword": "[parameters('lampCommon').dbLoginPassword]",
                "mssqlDbServiceObjectiveName": "[parameters('lampCommon').mssqlDbServiceObjectiveName]",
                "mssqlDbEdition": "[parameters('lampCommon').mssqlDbEdition]",
                "mssqlDbSize": "[parameters('lampCommon').mssqlDbSize]"
            },
            "fileServerProfile": {
                "type": "[parameters('lampCommon').fileServerType]",
                "nfsVmName": "[parameters('lampCommon').ctlrVmName]",
                "glusterVmName": "[concat(parameters('lampCommon').gfsNameRoot, '0')]",
                "glusterVolName": "data",
                "nfsByoIpExportPath": "[parameters('lampCommon').nfsByoIpExportPath]",
                "nfsHaLbIP": "[parameters('lampCommon').nfsHaLbIP]",
                "nfsHaExportPath": "[parameters('lampCommon').nfsHaExportPath]"
            }
        }
    },
    "outputs": {
        "vmSetupParamsObj": {
            "value": "[variables('vmSetupParamsObj')]",
            "type": "object"
        }
    }
}

{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "lampCommon": {
            "metadata": {
                "description": "Common LAMP values"
            },
            "type": "object"
        }
    },
    "resources": [
        {
            "condition": "[not(variables('isAzureFiles'))]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "location": "[parameters('lampCommon').location]",
            "name": "[concat(parameters('lampCommon').storageAccountName, 'naf')]",
            "kind": "StorageV2",
            "sku": {
                "name": "[parameters('lampCommon').storageAccountType]"
            },
            "properties": {
                "encryption": {
                    "keySource": "Microsoft.Storage",
                    "services": {
                        "blob": {
                            "enabled": true
                        },
                        "file": {
                            "enabled": true
                        }
                    }
                },
                "networkAcls": {
                    "bypass": "AzureServices",
                    "defaultAction": "Allow",
                    "ipRules": [],
                    "virtualNetworkRules": []
                },
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "condition": "[and(variables('isAzureFiles'), not(variables('isAzureFilesNFS')))]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "location": "[parameters('lampCommon').location]",
            "name": "[concat(parameters('lampCommon').storageAccountName,'af')]",
            "kind": "StorageV2",
            "sku": {
                "name": "[parameters('lampCommon').storageAccountType]"
            },
            "properties": {
                "largeFileSharesState": "Enabled",
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [],
                    "ipRules": [],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "keyType": "Account",
                            "enabled": true
                        },
                        "blob": {
                            "keyType": "Account",
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                }
            }
        },
        {
            "condition": "[and(variables('isAzureFiles'), variables('isAzureFilesNFS'))]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "PremiumStorageWithNfsFileshare",
            "properties": {
                "mode": "Incremental",
                "parameters": {
                    "lampCommon": {
                        "value": "[parameters('lampCommon')]"
                    }
                },
                "templateLink": {
                    "uri": "[concat(parameters('lampCommon').baseTemplateUrl,'premium-files-nfs.json',parameters('lampCommon').artifactsSasToken)]"
                }
            }
        }
    ],
    "variables": {
        "documentation1": "This sub-template creates a storage account.  It expects certain values in the 'common' datastructure.",
        "documentation2": " storageAccountName - name of storage account",
        "documentation3": " storageAccountType - type of storage account",
        "isAzureFiles": "[equals(parameters('lampCommon').fileServerType, 'azurefiles')]",
        "isAzureFilesNFS": "[equals(parameters('lampCommon').azureFileShareType, 'nfs')]",
        "storageName": "[concat(parameters('lampCommon').storageAccountName,if(variables('isAzureFiles'), 'af', 'naf'))]",
        "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageName'))]"
    },
    "outputs": {
        "storageAccountKey": {
            "value": "[if(variables('isAzureFilesNFS'), '',listKeys(variables('storageAccountId'), '2019-06-01').keys[0].value)]",
            "type": "string"
        },
        "storageAccountName": {
            "value": "[variables('storageName')]",
            "type": "string"
        }
    }
}
